import <std_connector.camkes>;

import <if_OS_Entropy.camkes>;

import "components/NwStack/network_stack.camkes";
import "components/Ticker/Ticker.camkes";

import "components/Tests/test_OS_Tls.camkes";

#include "config/SystemConfig.h"

#include "NIC_ChanMux/NIC_ChanMux.camkes"
NIC_ChanMux_COMPONENT_DEFINE(NwDriver1, NIC_DRIVER_RINGBUFFER_SIZE)

#include "ChanMux/ChanMux_UART.camkes"
ChanMux_UART_COMPONENT_DEFINE(
    ChanMux_UART,
    nwDriver1, ctrl,
    nwDriver1, data
)

#include "EntropySource/camkes/EntropySource.camkes"
EntropySource_COMPONENT_DEFINE(EntropySource)

#include "TimeServer/camkes/TimeServer.camkes"
TimeServer_COMPONENT_DEFINE(TimeServer)

assembly {
    composition {
        //----------------------------------------------------------------------
        // ChanMux_UART + UART
        //----------------------------------------------------------------------
        component ChanMux_UART chanMux_UART;
        component UART_CHANMUX uart;

        ChanMux_UART_INSTANCE_CONNECT(
            chanMux_UART,
            uart
        )

        //----------------------------------------------------------------------
        // Ticker
        //----------------------------------------------------------------------
        component  Ticker ticker;

        //----------------------------------------------------------------------
        // TimeServer
        //----------------------------------------------------------------------
        component TimeServer timeServer;

        TimeServer_INSTANCE_CONNECT_CLIENTS(
            timeServer,
            ticker.timeServer_rpc,   ticker.timeServer_notify,
            nwStack1.timeServer_rpc, nwStack1.timeServer_notify)

        //----------------------------------------------------------------------
        // Network Driver #1
        //----------------------------------------------------------------------
        component  NwDriver1       nwDriver1;

        ChanMux_INSTANCE_CONNECT_CLIENT(
            chanMux_UART,
            nwDriver1, data, ctrl
        )

        //----------------------------------------------------------------------
        // Network Stack #1
        //----------------------------------------------------------------------
        component  NwStack1               nwStack1;

        connection seL4NotificationNative NwStackdataAvail2 (from nwStack1.event_internal, to nwStack1.event_tick_or_data);
        connection seL4Notification       NwStackEventsRxd1 (from nwStack1.e_write,        to nwStack1.c_write);
        connection seL4Notification       NwStackEventsRxd2 (from nwStack1.e_read,         to nwStack1.c_read);
        connection seL4Notification       NwStackEventsRxd3 (from nwStack1.e_conn,         to nwStack1.c_conn);

        connection seL4NotificationNative NwStack_tick1     (from ticker.e_timeout_nwstacktick1, to nwStack1.event_tick_or_data);

        NIC_ChanMux_INSTANCE_CONNECT_CLIENT(
            nwDriver1,
            nwStack1.nic_driver,  nwStack1.port_nic_to, nwStack1.port_nic_from, nwStack1.event_tick_or_data
        )

        //----------------------------------------------------------------------
        // Network Stack App #1
        //----------------------------------------------------------------------
        component  test_OS_Tls      unitTest;

        connection seL4Notification NwAppInitDone        (from nwStack1.event_network_init_done,  to unitTest.event_network_stack_init_done);
        connection seL4RPCCall      NwApp_nwStack        (from unitTest.network_stack_rpc,         to nwStack1.network_stack_rpc);
        connection seL4SharedData   NwApp_dataConnection (from unitTest.NwAppDataPort,             to nwStack1.port_app_io);

        component  EntropySource    entropySource0;

        EntropySource_INSTANCE_CONNECT_CLIENT(
            entropySource0,
            unitTest.entropy_rpc,
            unitTest.entropy_port)
    }

    configuration {
        TimeServer_CLIENT_ASSIGN_BADGES(
            ticker.timeServer_rpc,
            nwStack1.timeServer_rpc
        )

        ChanMux_UART_CLIENT_ASSIGN_BADGES(
            nwDriver1.chanMux_Rpc
        )
    }
}
